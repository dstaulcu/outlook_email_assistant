name: Deploy to AWS S3 + CloudFront

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        environment: [home, work]
        include:
          - environment: home
            if: github.ref == 'refs/heads/develop'
          - environment: work
            if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ matrix.environment == 'home' && 'us-east-1' || 'us-gov-west-1' }}
    
    - name: Deploy to ${{ matrix.environment }}
      run: npm run deploy:${{ matrix.environment }}
    
    - name: Comment PR with deployment info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const environment = '${{ matrix.environment }}';
          const environments = require('./config/environments');
          const config = environments[environment];
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `üöÄ Deployed to **${environment}** environment!\n\n` +
                  `üìÑ Manifest URL: ${config.baseUrl}/manifest.xml\n` +
                  `üåê Add-in URL: ${config.baseUrl}\n\n` +
                  `To test this deployment, use the manifest URL in Outlook.`
          });

  # Security scanning
  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Check for vulnerabilities
      run: npm audit --fix

  # Accessibility testing
  accessibility:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run accessibility tests
      run: node test-accessibility.js
    
    - name: Upload accessibility report
      uses: actions/upload-artifact@v3
      with:
        name: accessibility-report
        path: accessibility-report.html
        retention-days: 30
